openapi: 3.0.1
info:
  title: Latihan API DOCUMENTATION
  version: 1.0.0
  contact:
    email: adewanggan@gmail.com
servers:
  - url: http://localhost:3000/api/v1
tags:
  - name: Users
    description: Everything about your Users
  - name: Accounts
    description: Everything about your Accounts
paths:
  /users:
    post:
      tags:
        - "Users"
      summary: register new Users
      description: mendaftarkan Users baru kedalam database
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Dewangga
                email:
                  type: string
                  example: dewangga@gmail.com
                password:
                  type: string
                  example: dewangga123
                identity_type:
                  type: string
                  example: KTP
                identity_number:
                  type: string
                  example: "0000000000000000"
                address:
                  type: string
                  example: Jalan Banyu Urip

      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: OK
                  data:
                    allOf:
                      - $ref: "#/components/schemas/Users"
                      - type: object
                        properties:
                          profiles:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 1
                              identity_type:
                                type: string
                                example: KTP
                              identity_number:
                                type: string
                                example: "0000000000000000"
                              address:
                                type: string
                                example: Jalan Banyu Urip
                              user_id:
                                type: integer
                                example: 1

        400:
          description: Duplicate Email
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Email already used
      security:
        - bearerAuth: []

    get:
      tags:
        - "Users"
      summary: get all users
      parameters:
        - schema:
            type: string
          name: search
          in: query
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: OK
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Users"

  /users/{user_id}:
    get:
      tags:
        - "Users"
      summary: get all users
      parameters:
        - schema:
            type: integer
          name: user_id
          in: path
          required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: OK
                  data:
                    allOf:
                      - $ref: "#/components/schemas/Users"
                      - type: object
                        properties:
                          profiles:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 1
                              identity_type:
                                type: string
                                example: KTP
                              identity_number:
                                type: string
                                example: "0000000000000000"
                              address:
                                type: string
                                example: Jalan Banyu Urip
                              user_id:
                                type: integer
                                example: 1

        400:
          description: User_id tidak ditemukan/tidak valid!
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: User tidak ditemukan dengan userId 100

  /accounts:
    post:
      tags:
        - "Accounts"
      summary: register new Accounts
      description: mendaftarkan Accounts baru kedalam database
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bank_name:
                  type: string
                  example: Mandiri
                bank_account_number:
                  type: string
                  example: "91827364501"
                balance:
                  type: integer
                  example: 5000000
                user_id:
                  type: integer
                  example: 5

      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: OK
                  data:
                    $ref: "#/components/schemas/Accounts"

        404:
          description: user_id tidak dapat ditemukan!
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: User dengan id 5 tidak dapat ditemukan
      security:
        - bearerAuth: []

    get:
      tags:
        - "Accounts"
      summary: get all accounts
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: OK
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Accounts"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Users:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Dewangga
        email:
          type: string
          example: dewangga@gmail.com
        password:
          type: string
          example: dewangga123

    Accounts:
      type: object
      properties:
        id:
          type: integer
          example: 8
        bank_name:
          type: string
          example: Mandiri
        bank_account_number:
          type: string
          example: "91827364501"
        balance:
          type: integer
          example: 5000000
        user_id:
          type: integer
          example: 5
